---
# Gather facts to get system's primary IP
- name: Gather facts to get system's primary IP
  ansible.builtin.setup:
    gather_subset:
      - network

# Get Pritunl setup key
- name: Get Pritunl setup key
  ansible.builtin.command:
    cmd: pritunl setup-key
  register: pritunl_key_output

- name: Debug Pritunl setup key output
  debug:
    var: pritunl_key_output

- name: Create Pritunl configuration file
  ansible.builtin.copy:
    dest: /etc/pritunl.conf
    content: |
      {
          "debug": false,
          "bind_addr": "0.0.0.0",
          "port": 443,
          "log_path": "/var/log/pritunl.log",
          "temp_path": "/tmp/pritunl_%r",
          "local_address_interface": "auto",
          "mongodb_uri": "mongodb://pritunl_user:{{ pritunl_key_output.stdout | default('missing_key') }}@127.0.0.1:27017/pritunl"
      }
  when:
    - pritunl_key_output is defined
    - ansible_default_ipv4.address is defined

# Create Pritunl Web configuration file
- name: Create Pritunl Web configuration file
  ansible.builtin.copy:
    dest: /etc/pritunl-web.env
    content: |
      PRITUNL_MONGODB_URI=mongodb://pritunl_user:{{ pritunl_key_output.stdout | default('missing_key') }}@127.0.0.1:27017/pritunl
      PRITUNL_DEBUG=true

# Create Pritunl Web service file
- name: Create Pritunl Web service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/pritunl-web.service
    content: |
      [Unit]
      Description=Pritunl Web Server
      After=network.target

      [Service]
      EnvironmentFile=/etc/pritunl-web.env
      ExecStart=/usr/bin/pritunl-web
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

# Reload systemd and restart Pritunl Web service
- name: Reload systemd and restart Pritunl Web service
  ansible.builtin.systemd:
    name: pritunl-web
    daemon_reload: yes
    state: restarted

- name: Modify MongoDB storage dbPath
  ansible.builtin.lineinfile:
    path: /etc/mongod.conf
    regexp: '^  dbPath:'
    line: '  dbPath: /mongodbfolder'
    insertafter: '^storage:'

# Modificar la configuraci√≥n de red (net)
- name: Modify MongoDB network bindIp and port
  ansible.builtin.lineinfile:
    path: /etc/mongod.conf
    regexp: '^  bindIp:'
    line: '  bindIp: 0.0.0.0'
    insertafter: '^net:'

- name: Modify MongoDB network port
  ansible.builtin.lineinfile:
    path: /etc/mongod.conf
    regexp: '^  port:'
    line: '  port: 27017'
    insertafter: '^net:'

- name: Create pritunl_setup.js script
  ansible.builtin.copy:
    dest: /tmp/pritunl_setup.js
    content: |
      use admin;
      db.createUser({
          user: "newAdmin",
          pwd: "12345",
          roles: [{ role: "root", db: "admin" }]
      });      
      use pritunl;
      db.dropUser("pritunl_user");
      db.createUser({
          user: "pritunl_user",
          pwd: "{{ pritunl_key_output.stdout | default('missing_key') }}",
          roles: [{ role: "readWrite", db: "pritunl" }]
      });


- name: Display content of pritunl_setup.js
  ansible.builtin.command:
    cmd: cat /tmp/pritunl_setup.js
  register: pritunl_setup_script

- name: Debug pritunl_setup.js content
  ansible.builtin.debug:
    var: pritunl_setup_script.stdout


- name: Debugging the generated command
  ansible.builtin.debug:
    msg: "Running mongosh with the following command: mongosh < /tmp/pritunl_setup.js"

- name: Run pritunl_setup.js script with MongoDB connection details
  ansible.builtin.command:
    cmd: "mongosh < /tmp/pritunl_setup.js"
  register: mongo_output
  ignore_errors: yes

- name: Debug command output
  ansible.builtin.debug:
    var: mongo_output.stdout

- name: Debug command error output
  ansible.builtin.debug:
    var: mongo_output.stderr

- name: Debug command return code
  ansible.builtin.debug:
    var: mongo_output.rc

- name: Debug the full result
  ansible.builtin.debug:
    var: mongo_output

# Set permissions for MongoDB folder
- name: Change permissions of MongoDB folder
  ansible.builtin.file:
    path: /mongodbfolder
    owner: mongodb
    group: mongodb
    mode: '0755'
    recurse: yes

# Get default admin passwd
- name: Get Pritunl default admin password
  ansible.builtin.command:
    cmd: pritunl default-password
  register: pritunl_default_password

- name: Show Pritunl default admin password
  debug:
    msg: "Pritunl default admin password is: {{ pritunl_default_password.stdout }}"
